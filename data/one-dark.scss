@function fadein($color, $amount) {
  @return adjust-color($color, $alpha: $amount / 100%);
}

@function fadeout($color, $amount) {
  @return adjust-color($color, $alpha: -$amount / 100%);
}

@function fade($color, $amount) {
  @return change-color($color, $alpha: $amount / 100%);
}

@function hsv($hue, $saturation, $value) {
  @return mix(mix(hsl($hue, 100%, 50%), white, $saturation), black, $value);
}

@function luma($color) {
  // TODO: gamma correction
  $R: red($color) / 255;
  $G: green($color) / 255;
  $B: blue($color) / 255;
  @return (0.2126 * $R + 0.7152 * $G + 0.0722 * $B) * 100%;
}

@function contrast($color, $dark: black, $light: white, $threshold: 43%) {
  @if luma($color) < $threshold {
    @return $light;
  } @else {
    @return $dark;
  }
}

// adapted from
// https://github.com/atom/atom/tree/master/packages/one-dark-syntax
// https://github.com/atom/atom/tree/master/packages/one-dark-ui

// Config
$syntax-hue:        220;
$syntax-saturation: 13%;
$syntax-brightness: 18%;

// Monochrome
$mono-1: hsl($syntax-hue, 14%, 71%); // default text
$mono-2: hsl($syntax-hue,  9%, 55%);
$mono-3: hsl($syntax-hue, 10%, 40%);

// Colors
$hue-1:   hsl(187, 47%, 55%); // <-cyan
$hue-2:   hsl(207, 82%, 66%); // <-blue
$hue-3:   hsl(286, 60%, 67%); // <-purple
$hue-4:   hsl( 95, 38%, 62%); // <-green

$hue-5:   hsl(355, 65%, 65%); // <-red 1
$hue-5-2: hsl(  5, 48%, 51%); // <-red 2

$hue-6:   hsl( 29, 54%, 61%); // <-orange 1
$hue-6-2: hsl( 39, 67%, 69%); // <-orange 2

// Base colors
$syntax-fg:     $mono-1;
$syntax-bg:     hsl($syntax-hue, $syntax-saturation, $syntax-brightness);
$syntax-gutter: darken($syntax-fg, 26%);
$syntax-guide:  fade($syntax-fg, 15%);
$syntax-accent: hsl($syntax-hue, 100%, 66%);

// General colors
$syntax-background-color:      $syntax-bg;
$syntax-text-color:            $syntax-fg;
$syntax-cursor-color:          $syntax-accent;
$syntax-selection-color:       lighten($syntax-background-color, 10%);
$syntax-selection-flash-color: $syntax-accent;

$syntax-invisible-character-color: $syntax-guide;

// Gutter colors
$syntax-gutter-text-color:                $syntax-gutter;
$syntax-gutter-text-color-selected:       $syntax-fg;
$syntax-gutter-background-color:          $syntax-bg; // unused
$syntax-gutter-background-color-selected: lighten($syntax-bg, 8%);

$syntax-cursor-line: hsla($syntax-hue, 100%,  80%, .04); // needs to be semi-transparent to show search results

atom-text-editor {
  background-color: $syntax-background-color;
  color: $syntax-text-color;

  .line.cursor-line {
    background-color: $syntax-cursor-line;
  }

  .cursor {
    border-left: 2px solid $syntax-cursor-color;
  }

  .selection .region {
    background-color: $syntax-selection-color;
  }

  .invisible-character {
    color: $syntax-invisible-character-color;
  }

  .gutter {
    .line-number {
      color: $syntax-gutter-text-color;

      &.cursor-line {
        color: $syntax-gutter-text-color-selected;
        background-color: $syntax-gutter-background-color-selected;
      }
      &.cursor-line-no-selection {
        background-color: transparent;
      }
    }
  }
}

.syntax--comment {
  color: $mono-3;
  font-style: italic;
}

.syntax--keyword {
  color: $hue-3;
}

.syntax--variable {
  color: $hue-5;
  &.syntax--parameter {
    color: $mono-1;
  }
}

.syntax--punctuation {
  color: $mono-1;
}

.syntax--string {
  color: $hue-4;
}

.syntax--constant {
  color: $hue-6;
  &.syntax--character {
    color: $hue-4;
  }
}

.syntax--entity {
  color: $mono-1;
  &.syntax--function {
    color: $hue-2;
  }
}

.syntax--meta {
  &.syntax--class {
    color: $hue-6-2;
  }
}

.syntax--support {
  &.syntax--type {
    color: $hue-1;
  }
}

.syntax--storage {
  color: $hue-3;
}

$ui-syntax-color: $syntax-background-color;

// Color guards
$ui-s-h: hue($ui-syntax-color);
$ui-s-s: saturation($ui-syntax-color);
$ui-s-l: lightness($ui-syntax-color);
$ui-inv: 10%; // inverse lightness if below

$ui-hue: null;
@if $ui-s-s == 0 { $ui-hue: 220; } // Use blue hue when no saturation
@if $ui-s-s >  0 { $ui-hue: $ui-s-h; }

$ui-saturation: null;
@if $ui-s-h <=  80 { $ui-saturation: min($ui-s-s,  5%); } // minimize saturation for brown
@if $ui-s-h >   80 and $ui-s-h <  160 { $ui-saturation: min($ui-s-s, 12%); } // reduce saturation for green
@if $ui-s-h >= 160 and $ui-s-l <  $ui-inv { $ui-saturation: min($ui-s-s, 48%); } // limit max saturation for very dark backgrounds
@if $ui-s-h >= 160 and $ui-s-l >= $ui-inv { $ui-saturation: $ui-s-s; }

$ui-lightness: null;
$ui-lightness-border: null;
@if $ui-s-l <  $ui-inv {
  $ui-lightness: $ui-s-l + 8%; // increase lightness when too dark
  $ui-lightness-border: $ui-lightness*.3;
}
@if $ui-s-l >= $ui-inv {
  $ui-lightness: min($ui-s-l, 20%); // limit max lightness (for light syntax themes)
  $ui-lightness-border: $ui-lightness*.6;
}

// Main colors
$ui-fg:     hsl($ui-hue, min($ui-saturation, 18%), max($ui-lightness*3, 66%) );
$ui-bg:     hsl($ui-hue, $ui-saturation, $ui-lightness); // normalized $syntax-background-color
$ui-border: hsl($ui-hue, $ui-saturation, $ui-lightness-border);

// Base
$base-background-color: $ui-bg;
$base-border-color:     $ui-border;

// Background (Custom)
$level-1-color: lighten($base-background-color, 6%);
$level-2-color: $base-background-color;
$level-3-color: darken($base-background-color, 3%);

$level-3-color-hover:  lighten($level-3-color, 6%);
$level-3-color-active: lighten($level-3-color, 3%);

// Accent (Custom)
$accent-luma:             luma( hsl($ui-hue, 50%, 50%) ); // get lightness of current hue

// used for marker, inputs (smaller things)
$accent-color:            mix( hsv( $ui-hue, 100%, 66%), hsl( $ui-hue, 100%, 70%), $accent-luma ); // mix hsv + hsl (favor mostly hsl)
$accent-text-color:       contrast($accent-color, hsl($ui-hue,100%,10%), #fff, 25% );

// used for button, tooltip (larger things)
$accent-bg-color:         mix( hsv( $ui-hue, 66%, 66%), hsl( $ui-hue, 66%, 60%), $accent-luma * 2 ); // mix hsv + hsl (favor hsl for dark, hsv for light colors)
$accent-bg-text-color:    contrast($accent-bg-color, hsl($ui-hue,100%,10%), #fff, 30% );

// Text
$text-color:            $ui-fg;
$text-color-subtle:     fadeout($text-color, 40%);
$text-color-highlight:  lighten($text-color, 20%);
$text-color-selected:   white;

$text-color-info:    hsl(219,  79%, 66%);
$text-color-success: hsl(140,  44%, 62%);
$text-color-warning: hsl( 36,  60%, 72%);
$text-color-error:   hsl(  9, 100%, 64%);

// Background
$background-color-info:    hsl(208, 88%, 48%);
$background-color-success: hsl(132, 58%, 40%);
$background-color-warning: hsl( 42, 88%, 36%);
$background-color-error:   hsl(  5, 64%, 50%);

$background-color-highlight: lighten($base-background-color, 4%);
$background-color-selected:  lighten($base-background-color, 8%);

$app-background-color: $level-3-color;

@mixin focus {
  outline: none;
  border-color: $accent-color;
  box-shadow: 0 0 0 1px $accent-color;
}

$button-background-color:          $level-1-color;
$button-background-color-hover:    lighten($button-background-color, 2%);
$button-background-color-selected: $accent-bg-color;
$button-border-color:              $base-border-color;

$scrollbar-color:                   lighten($ui-syntax-color, 16%);
$scrollbar-background-color:        $level-3-color; // replaced `transparent` with a solid color to test https://github.com/atom/one-light-ui/issues/4
$scrollbar-color-editor:            lighten($ui-syntax-color, 16%);
$scrollbar-background-color-editor: $ui-syntax-color;

$tab-text-color:                    $text-color-subtle;
$tab-text-color-active:             $text-color-highlight;
$tab-text-color-editor:             contrast($ui-syntax-color, darken($ui-syntax-color, 50%), $text-color-highlight );
$tab-background-color-editor:       $ui-syntax-color;
$tab-inactive-status-added:         fade($text-color-success, 55%);
$tab-inactive-status-modified:      fade($text-color-warning, 55%);
$tab-bar-background-color:         $level-3-color;
$tab-bar-border-color:             $base-border-color;
$tab-background-color:             $level-3-color;
$tab-background-color-active:      $level-2-color;
$tab-border-color:                 $base-border-color;

window {

  headerbar.titlebar {
    background-color: $app-background-color;
    background-image: none;
    border-bottom: 1px solid $base-border-color;
    color: $text-color;
    button {
      background-color: $button-background-color;
      background-image: linear-gradient(lighten($button-background-color, 2%), $button-background-color);
      box-shadow: none;
      outline: none;
      color: $text-color;
      border: 1px solid $button-border-color;
      transition-duration: 0;
      &.titlebutton:not(:hover) {
        background-color: transparent;
        background-image: none;
        border-color: transparent;
      }
      &:hover {
        color: $text-color-highlight;
        background-image: linear-gradient(lighten($button-background-color-hover, 2%), $button-background-color-hover);
      }
      &:active {
        background: darken($button-background-color, 4%);
      }
      &:focus {
        @include focus;
      }
    }
  }

  scrolledwindow {
    undershoot, overshoot {
      background-color: transparent;
      background-image: none;
      border-color: transparent;
      box-shadow: none;
    }
  }

  scrollbar {
    opacity: 1;
    background-color: $scrollbar-background-color-editor;
    border-color: $scrollbar-background-color-editor;
    slider {
      background-color: $scrollbar-color-editor;
      border-color: $scrollbar-background-color-editor;
    }
  }

  notebook {
    header {
      background-color: $tab-bar-background-color;
      border-bottom: 1px solid $tab-border-color;
    }
    tabs {
      padding: 0;
    }
    tab {
      margin: 0;
      color: $tab-text-color;
      font-weight: normal;
      border-left: 1px solid $tab-border-color;
      box-shadow: none;
      &:checked {
        color: $tab-text-color-active;
        background-color: $tab-background-color-active;
        border-left-color: $accent-color;
        box-shadow: inset 1px 0 $accent-color;
      }
      &:first-child:not(:checked) {
        border-left-color: transparent;
      }
      &:last-child {
        &:not(:checked) {
          box-shadow: 1px 0 $tab-border-color;
        }
        &:checked {
          box-shadow: inset 1px 0 $accent-color, 1px 0 $tab-border-color;
        }
      }
      button {
        color: transparent;
        background-color: transparent;
        background-image: none;
        border-color: transparent;
        box-shadow: none;
        outline: none;
        transition-duration: 0;
      }
      &:hover button {
        color: inherit;
        &:hover {
          color: $accent-text-color;
          background-color: $accent-color;
        }
        &:active {
          background-color: fade($accent-color, 50%);
        }
      }
    }
  }

  statusbar {
    background-color: $level-3-color;
    border-top: 1px solid $base-border-color;
    color: $text-color;
    label {
      padding: 0 0.75em;
    }
  }

}
